# Copyright 2006-2021 VMware, Inc.
# SPDX-License-Identifier: MIT
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kube-apiserver-config
  namespace: "{{ tanzu_identity.namespace }}"
data:
  UPDATE_K8S_CA: "{{ ((tanzu_security.actions.update_k8s_ca | bool) and (('letsencrypt-stage' in tanzu_security.tls_providers) or ('ca' in tanzu_security.tls_providers) or ('wildcard' in tanzu_security.tls_providers))) | string | lower }}"
  kube-apiserver-config-values.yaml: |
    #@data/values
    ---
    UPDATE_K8S_CA: ""
  kube-apiserver-config-overlay.yaml: |
    #@ load("@ytt:overlay", "overlay")
    #@ load("@ytt:data", "data")

    #@ def startswith(index, left, right):
    #@  return left.startswith(right)
    #@ end

    #@overlay/match by=overlay.subset({"metadata":{"labels":{"component":"kube-apiserver"}}})
    ---
    spec:
      containers:
      #@overlay/match by='name', expects=1
      - name: kube-apiserver
        command:
        #@overlay/match by=startswith, missing_ok=True
        - --oidc-client-id=tanzu
        #@overlay/match by=startswith, missing_ok=True
        - --oidc-issuer-url=https://{{ tanzu_identity.dex.dns }}
        #@overlay/match by=startswith, missing_ok=True
        - --oidc-username-claim=email
        #@overlay/match by=startswith, missing_ok=True
        - --oidc-groups-claim=group
        #@ if data.values.UPDATE_K8S_CA == "true":
        #@overlay/match by=startswith, missing_ok=True
        - --oidc-ca-file=/etc/kubernetes/pki/tanzu-ca.crt
        #@ end
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ _job_name }}"
  namespace: "{{ tanzu_identity.namespace }}"
spec:
  # ensure our job doesn't keep retrying if we bork the apiserver
  activeDeadlineSeconds: 60
  backoffLimit: 0

  template:
    metadata:
      labels:
        app.kubernetes.io/name: kube-apiserver-config
    spec:
      serviceAccountName: job-kube-apiserver
      # schedule on master node(s)
      nodeName: {{ name }}
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master

      # create kubernetes manifests host path from master
      restartPolicy: Never
      containers:
      - image: projects.registry.vmware.com/rpk/ytt:v0.30.0
        name: kube-apiserver-config
        env:
        - name: UPDATE_K8S_CA
          valueFrom:
            configMapKeyRef:
              name: kube-apiserver-config
              key: UPDATE_K8S_CA
        command:
          - "/bin/sh"
        args:
          - "-c"
          - |
            cat /etc/kubernetes/manifests/kube-apiserver.yaml > /etc/kubernetes/backup/kube-apiserver.yaml.orig
            /usr/bin/ytt --data-values-env UPDATE_K8S_CA -f /etc/kubernetes/manifests/kube-apiserver.yaml -f /etc/kubernetes/kube-apiserver-config-values.yaml -f /etc/kubernetes/kube-apiserver-config-overlay.yaml > /etc/kubernetes/backup/kube-apiserver.yaml.new
            if [ "$(cat /etc/kubernetes/backup/kube-apiserver.yaml.new)" != "" ]; then
              cat /etc/kubernetes/backup/kube-apiserver.yaml.new > /etc/kubernetes/manifests/kube-apiserver.yaml
            else
              echo "failed overlaying kube-apiserer config; found empty output"
              exit 1
            fi
        volumeMounts:
        - mountPath: /etc/kubernetes/manifests
          name: kubernetes-manifests
        - mountPath: /etc/kubernetes/backup
          name: kubernetes-manifests-backup
        - mountPath: /etc/kubernetes/kube-apiserver-config-overlay.yaml
          name: kube-apiserver-config
          subPath: kube-apiserver-config-overlay.yaml
          readOnly: true
        - mountPath: /etc/kubernetes/kube-apiserver-config-values.yaml
          name: kube-apiserver-config
          subPath: kube-apiserver-config-values.yaml
          readOnly: true
      volumes:
      - name: kubernetes-manifests
        hostPath:
          path: /etc/kubernetes/manifests
          type: Directory
      - name: kubernetes-manifests-backup
        hostPath:
          path: /etc/kubernetes/backup
          type: DirectoryOrCreate
      - name: kube-apiserver-config
        configMap:
          name: kube-apiserver-config