# Copyright 2006-2021 VMware, Inc.
# SPDX-License-Identifier: MIT
---
apiVersion: v1
kind: Secret
metadata:
  name: "{{ tanzu_app_stack.vault.config_job.vars_secret }}"
  namespace: "{{ tanzu_app_stack.mongodb.namespace }}"
data:
  hashicorp_vault_root_token:             "{{ hashicorp_vault_root_token | b64encode }}"
  hashicorp_vault_unseal_keys:            "{{ hashicorp_vault_unseal_keys | b64encode }}"
  hashicorp_vault_resource_name:          "{{ tanzu_secrets.hashicorp_vault.resource_name | b64encode }}"
  hashicorp_vault_namespace:              "{{ tanzu_secrets.namespace | b64encode }}"
  tanzu_app_stack_service_account:        "{{ tanzu_app_stack.service_account | b64encode }}"
  tanzu_app_stack_vault_policy_name:      "{{ tanzu_app_stack.vault.policy_name | b64encode }}"
  tanzu_app_stack_department_namespace:   "{{ tanzu_app_stack.department.namespace | b64encode }}"
  tanzu_app_stack_gateway_namespace:      "{{ tanzu_app_stack.gateway.namespace | b64encode }}"
  tanzu_app_stack_employee_namespace:     "{{ tanzu_app_stack.employee.namespace | b64encode }}"
  tanzu_app_stack_organization_namespace: "{{ tanzu_app_stack.organization.namespace | b64encode }}"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ tanzu_app_stack.vault.config_job.playbook_config_map }}"
  namespace: "{{ tanzu_app_stack.mongodb.namespace }}"
data:
  site.yaml: |{% raw %}
    ---
    - hosts:        "localhost"
      connection:   "local"
      gather_facts: false
      vars:
        hashicorp_vault_root_token:             "{{ lookup('env', 'hashicorp_vault_root_token') }}"
        hashicorp_vault_unseal_keys:            "{{ lookup('env', 'hashicorp_vault_unseal_keys') }}"
        hashicorp_vault_resource_name:          "{{ lookup('env', 'hashicorp_vault_resource_name') }}"
        hashicorp_vault_namespace:              "{{ lookup('env', 'hashicorp_vault_namespace') }}"
        hashicorp_vault_internal_url:           "http://{{ hashicorp_vault_resource_name }}.{{ hashicorp_vault_namespace }}:8200"
        tanzu_app_stack_service_account:        "{{ lookup('env', 'tanzu_app_stack_service_account') }}"
        tanzu_app_stack_vault_policy_name:      "{{ lookup('env', 'tanzu_app_stack_vault_policy_name') }}"
        tanzu_app_stack_department_namespace:   "{{ lookup('env', 'tanzu_app_stack_department_namespace') }}"
        tanzu_app_stack_gateway_namespace:      "{{ lookup('env', 'tanzu_app_stack_gateway_namespace') }}"
        tanzu_app_stack_employee_namespace:     "{{ lookup('env', 'tanzu_app_stack_employee_namespace') }}"
        tanzu_app_stack_organization_namespace: "{{ lookup('env', 'tanzu_app_stack_organization_namespace') }}"
        secure_logging:                         false
      tasks:
        - name: "ensure hashicorp vault policy binding kubernetes authentication role is created in all namespaces"
          hashivault_write:
            authtype:    "token"
            token:       "{{ hashicorp_vault_root_token }}"
            url:         "{{ hashicorp_vault_internal_url }}"
            secret:      "kubernetes/role/{{ item }}"
            mount_point: "auth"
            data:
              bound_service_account_names:      "{{ tanzu_app_stack_service_account }}"
              bound_service_account_namespaces: "{{ item }}"
              policies:                         "{{ tanzu_app_stack_vault_policy_name }}"
              ttl:                              "24h"
          register: _create_vault_binding
          until:    not _create_vault_binding.failed
          delay:    5
          retries:  20
          with_items:
            - "{{ tanzu_app_stack_department_namespace }}"
            - "{{ tanzu_app_stack_employee_namespace }}"
            - "{{ tanzu_app_stack_gateway_namespace }}"
            - "{{ tanzu_app_stack_organization_namespace }}"
          no_log: "{{ secure_logging | bool }}"

        - name: "ensure mongodb secrets are created"
          hashivault_write:
            authtype:    "token"
            token:       "{{ hashicorp_vault_root_token }}"
            url:         "{{ hashicorp_vault_internal_url }}"
            secret:      "application-stack/mongodb"
            mount_point: "tanzu"
            data:
              username: "mongo-admin"
              password: "mongo-admin-password"
            version: "2"
          register: _create_vault_secret
          until:    not _create_vault_secret.failed
          delay:    5
          retries:  20
          no_log:   "{{ secure_logging | bool }}"
{% endraw %}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ tanzu_app_stack.vault.config_job.name }}"
  namespace: "{{ tanzu_app_stack.mongodb.namespace }}"
  labels:
    app.kubernetes.io/name: "{{ tanzu_app_stack.vault.config_job.name }}"
spec:
  activeDeadlineSeconds: 600
  backoffLimit: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "{{ tanzu_app_stack.vault.config_job.name }}"
    spec:
      restartPolicy: Never
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
        runAsNonRoot: true
      serviceAccountName: "{{ tanzu_app_stack.service_account }}"
      containers:
        - image: projects.registry.vmware.com/rpk/rpk-job-runner:v1.0.11
          name: rpk-job-runner
          envFrom:
            - secretRef:
                name: "{{ tanzu_app_stack.vault.config_job.vars_secret }}"
          volumeMounts:
            - mountPath: /ansible/site.yaml
              name: "{{ tanzu_app_stack.vault.config_job.playbook_config_map }}"
              readOnly: true
              subPath: site.yaml
          resources:
            requests:
              cpu: "500m"
              memory: "64Mi"
            limits:
              cpu: "1000m"
              memory: "128Mi"
      volumes:
        - name: "{{ tanzu_app_stack.vault.config_job.playbook_config_map }}"
          configMap:
            name: "{{ tanzu_app_stack.vault.config_job.playbook_config_map }}"
